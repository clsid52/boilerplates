version: '3.9'

services:
  db:
    image: postgres:16-alpine 
    container_name: db_postiz
    restart: unless-stopped
    environment:
      POSTGRES_DB: postiz
      POSTGRES_USER: postiz
      POSTGRES_PASSWORD: ${DOCMOST_DB_PASSWORD}
    healthcheck:
      test: pg_isready -U postiz -d postiz
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - app-postiz

   postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    depends_on:
      - db : 
        condition: service_healthy
      - redis:
        condition: service_healthy
    restart: unless-stopped
    environment:
      MAIN_URL: "https://postiz.your-server.com"
      FRONTEND_URL: "https://postiz.your-server.com"
      NEXT_PUBLIC_BACKEND_URL: "https://postiz.your-server.com/api"
      JWT_SECRET: "random string that is unique to every install - just type random characters here!" #*
      #* node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
      DATABASE_URL: "postgresql://postiz:${DOCMOST_DB_PASSWORD}@db:5432/postiz?schema=public"
      REDIS_URL: "redis://redis:6379"
      BACKEND_INTERNAL_URL: "http://localhost:3000"
      IS_GENERAL: "true" 
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
    ports:
      - "5000:5000"
    volumes:
      - postiz-uploads:/uploads/
      - postiz:/config/
    networks:
      - app-postiz
  
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - app-postiz
      
volumes:
  postiz-uploads:
    external: false
  postiz:
    external: false
  db_data:
    external: false
  redis_data:
    external: false

networks:
  app-postiz:
    external: false
    # driver: bridge
